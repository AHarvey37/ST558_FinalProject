---
title: "Modeling"
author: "Andrew Harvey"
format: html
editor: visual
---

```{r Libraries and Raw data, warning=FALSE, message=FALSE,}
library(tidyverse)
library(caret)
```


```{r Read in Data and Set Factors}
rawData <- read.csv("./diabetes_binary_health_indicators_BRFSS2015.csv")

#create a new data frame for cleaning and converts all binary variables into factors
cleaned<- rawData|>
  mutate(Diabetes_binary = factor(Diabetes_binary,labels = c("Yes","No")),
         HighBP = as.factor(HighBP),
         HighChol = as.factor(HighChol),
         CholCheck = as.factor(CholCheck),
         Smoker = as.factor(Smoker),
         Stroke = as.factor(Stroke),
         HeartDiseaseorAttack = as.factor(HeartDiseaseorAttack),
         PhysActivity = as.factor(PhysActivity),
         Fruits = as.factor(Fruits),
         Veggies = as.factor(Veggies),
         HvyAlcoholConsump = as.factor(HvyAlcoholConsump),
         AnyHealthcare = as.factor(AnyHealthcare),
         NoDocbcCost = as.factor(NoDocbcCost),
         DiffWalk = as.factor(DiffWalk),
         Sex = as.factor(Sex)
         )|>
  select(Diabetes_binary,Age,Education,Income,PhysHlth,BMI)
```

## Modeling

chosen will be age education and income

```{r Split Data}
# set seed for predictability
set.seed(8)

# Create a Vector to use to split data
trainingVec <- sample(1:nrow(cleaned),
                      size = nrow(cleaned)*.7)

# Split data into training and test sets
## Training set
diabetesTrain <- cleaned[trainingVec,]
## Test set
diabetesTest <- cleaned[-trainingVec,]


```


# write a paragraph here about log loss
mnLogLoss computes the minus log-likelihood of the multinomial distribution (without the constant term): $$-logLoss = \frac{-1}{n}\sum_{i=1}^{n}\sum_{j=1}^{C}y_{ij}log(p_{ij})$$

```{r set train control and 5 fold cross-validation using mnLogLoss}
# make Train Control Variable with 5 fold cross-validation
trctrl<- trainControl(method = "cv",
                      number = 5,
                      classProbs = TRUE,
                      summaryFunction = mnLogLoss)
```

# write a paragraph about log models

```{r train and fit glm}
test<-glm(Diabetes_binary ~ BMI,
          data = diabetesTrain)

test


Diabetes_glmFit1<-train(Diabetes_binary ~ Age,
                       data = diabetesTrain,
                       method = "glm",
                       trControl = trctrl,
                       metric = "logLoss")

plot(Diabetes_glmFit1)

Diabetes_glmFit2<-train(Diabetes_binary ~ Age*Income,
                       data = diabetesTrain,
                       method = "plr",
                       trControl = trctrl,
                       preProcess = c("center", "scale"),
                       tuneLength = 10,
                       family = "binomial")

Diabetes_glmFit3<-train(Diabetes_binary ~ Age*Income*Education,
                       data = diabetesTrain,
                       method = "glm",
                       trControl = trctrl,
                       preProcess = c("center", "scale"),
                       tuneLength = 10,
                       family = "binomial")

RMSE(Diabetes_glmFit1,diabetesTrain$Diabetes_binary)

glm_Ttestglm_TestPred<-predict(Diabetes_glmFit1,
                      newdata = diabetesTest,
                      type = "raw")

glm_TestPred

confusionMatrix(glm_TestPred,diabetesTest$Diabetes_binary)
```


